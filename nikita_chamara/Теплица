#include <TroykaDHT.h>
DHT dht(2, DHT21); //датчик темп. и влажности подключен в порт D2
#define AIR 7 // вентилятор
#define HEAT 4 // нагреватель
#define LIGHT 6 // освещение
#define PUMP 5 //насос
#define VENT 7 //вентилятор
#define SVET_SENSOR A0 //датчик освещенности
#define VLAZN_SENSOR A1 // датчик влажности

int MIN_VLAZN = 60;
int MAX_VLAZN = 75;

void setup() {
 pinMode(HEAT, OUTPUT);
 pinMode(AIR, OUTPUT);
  pinMode(LIGHT, OUTPUT);
  pinMode(PUMP, OUTPUT);
  Serial.begin(9600);
  delay(2000);
}

enum Regime {day,night};
enum Regime tekushiy_regim = night;

int TIME = 0;  //секунды с начала дня, 16*60*60 - цикл начинается с ночи
int CURRENT_TEMPERATURE = 20; //обозначаем глобальные переменные для показаний датчика температуры
int CURRENT_AIR_VLAZN = 50; //обозначаем глобальные переменные для показаний датчика влажности воздуха
int T_VENT; // обозначение времени проветривания


void start_light() {
  if (tekushiy_regim == day) {
    if (analogRead(SVET_SENSOR) < 90) digitalWrite(LIGHT, HIGH);
    else digitalWrite(LIGHT, LOW);
  } else digitalWrite(LIGHT, LOW);
}

void start_vent() {
  boolean vent_on;   // переменная включения вентилятора
  // цикл проветривания
  int i;
  for (i = 2; i <= 12; i = i + 2) 
    // проветривание по расписанию: 2 часа ждет, 15 минут работает вентилятор
    { 
    if (((i * 60 * 60) - (T_VENT * 60)) < TIME < (i * 60 * 60)) {
      vent_on = HIGH;
      digitalWrite(VENT, vent_on);
    }
    else {
      vent_on = LOW;
      digitalWrite(VENT, vent_on);
    }
  }
}

// нагрев воздуха
void start_heat() {
  dht.read(); // включать обогрев и вентилятор, если холодно (по датчику температуры воздуха), включать только вентилятор, если жарко
  if (CURRENT_TEMPERATURE < 25) {
    digitalWrite(VENT, HIGH);
    digitalWrite(HEAT, HIGH);
  }
  if (CURRENT_TEMPERATURE > 35) {
    digitalWrite(VENT, HIGH);
    digitalWrite(HEAT, LOW);
  } else {
    digitalWrite(VENT, LOW);
    digitalWrite(HEAT, LOW);
  }
}

enum Regime_pump {vlazn_norm, poliv, hold, vent};
enum Regime_pump regim_pump = vlazn_norm;

void (*teplitsa_action[])(void)={&regim_day, &regim_night};


void start_pump() {
  int hold_time = 60; // время, когда ничего не происходит
  int watering_time = 15; // время поива
  int vent_time = 15; // время вентияции
  if (regim_pump == vlazn_norm) {
    if (analogRead(VLAZN_SENSOR) < MIN_VLAZN) { // влажность ниже нормы
      regim_pump = poliv;
    }
    else if (analogRead(VLAZN_SENSOR) > MAX_VLAZN){ // важность вые нормы
      regim_pump = hold;
    }
  }
  if (regim_pump == poliv) { //состояние полива
    for (int i = watering_time; i > 0; i--){
      digitalWrite(PUMP, HIGH);
      delay (1);
    }
    digitalWrite(PUMP, LOW);
    regim_pump = hold;
  }
  if (regim_pump == hold) { //состояние ожидания
    for (int i = hold_time; i > 0; i--){
      delay(1);
    }
    regim_pump == vlazn_norm;
  }
}


void regim_day() {
  start_light();
  start_vent();
  start_heat();
  start_pump();
}

void regim_night() {
  start_light();
  start_vent();
  start_heat();
  start_pump();
}


void loop() {
  delay(1);
  TIME = TIME + 1;
  if (TIME >= 24 * 60 * 60){
    TIME = 0;
    tekushiy_regim = day;
  }
  if (TIME > 16*60*60){
    tekushiy_regim = night;
  }
  teplitsa_action[tekushiy_regim]();
  
}
